apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

// It is not safe to store api key raw in some file that is pushed to a public remote repository. We will
// put the api key into ignored file local.properties. Please create an api.key field in local.properties and
// assign your api key. For example: api.key="yourApiKey"
def getApiKey() {
    Properties properties = new Properties()
    properties.load(new File(rootDir.absolutePath + "/local.properties").newDataInputStream())
    def apiKey = properties.getProperty('api.key', null)
    if (apiKey == null) {
        throw new GradleException(
                "Oh! API key is missing. Please go to your local.properties file and define an api.key")
    }
    return apiKey
}

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.rubenabad.teamworkprojects"
        minSdkVersion 15
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildConfigField "String", "YakApiKey", getApiKey()
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    // Library versions
    ext.anko_version = "0.10.4"
    ext.appcompat_version = "27.0.2"
    ext.constraintlayout_version = "1.1.0-beta4"
    ext.flowlayout_version = "1.1.0"
    ext.glide_version = "4.6.1"
    ext.glide_transformations_version = "3.1.0"
    ext.recyclerview_animations_version = "2.3.0"
    ext.viewmodel_livedata_version = "1.1.0"
    ext.retrofit_version = "2.3.0"
    ext.room_version = "1.0.0"
    ext.rxjava_version = "2.1.9"
    ext.rxandroid_version = "2.0.1"
    ext.rxkotlin_version = "2.2.0"
    ext.junit_version = "4.12"
    ext.runner_version = "1.0.1"
    ext.espresso_version = "3.0.1"
    ext.mockito_version = "2.13.0"
    ext.mockitokotlin_version = "1.5.0"
    ext.koin_version = "0.8.2"
    ext.stetho_version = "1.5.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Kotlin
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    // Anko
    implementation "org.jetbrains.anko:anko-commons:$anko_version"

    // AppCompat (and some components)
    implementation "com.android.support:appcompat-v7:$appcompat_version"
    implementation "com.android.support:recyclerview-v7:$appcompat_version"
    implementation "com.android.support:cardview-v7:$appcompat_version"
    implementation "com.android.support:palette-v7:$appcompat_version"
    implementation "com.android.support:design:$appcompat_version"

    // Constraint Layout
    implementation "com.android.support.constraint:constraint-layout:$constraintlayout_version"

    // Flow layout for tags
    implementation "com.nex3z:flow-layout:$flowlayout_version"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"
    implementation "jp.wasabeef:glide-transformations:$glide_transformations_version"

    // Recyclerview animators
    implementation "jp.wasabeef:recyclerview-animators:$recyclerview_animations_version"

    // ViewModel and LiveData
    implementation "android.arch.lifecycle:extensions:$viewmodel_livedata_version"

    // Koin (for dependency injection, if you are familiar with dagger you must give it a try)
    implementation "org.koin:koin-android-architecture:$koin_version"
    testImplementation "org.koin:koin-test:$koin_version"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit_version"

    // Room (for database storage, so we don't have to be always online)
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    implementation "android.arch.persistence.room:rxjava2:$room_version"

    // RXAndroid, RXJava and RXKotlin 2 (Kotlin binders for RXJava 2)
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxandroid_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$rxkotlin_version"

    // Test
    testImplementation "junit:junit:$junit_version"
    androidTestImplementation "com.android.support.test:runner:$runner_version"
    androidTestImplementation "com.android.support.test.espresso:espresso-core:$espresso_version"
    testImplementation "android.arch.persistence.room:testing:$room_version"
    androidTestImplementation "org.mockito:mockito-android:$mockito_version"
    testImplementation "com.nhaarman:mockito-kotlin-kt1.1:$mockitokotlin_version"
    androidTestImplementation "android.arch.core:core-testing:$viewmodel_livedata_version"

    implementation "com.facebook.stetho:stetho:$stetho_version"
}
